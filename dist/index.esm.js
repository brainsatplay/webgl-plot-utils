var g=class{constructor(e,t,s,r){this.r=e,this.g=t,this.b=s,this.a=r}},p=class{constructor(){this.scaleX=1,this.scaleY=1,this.offsetX=0,this.offsetY=0,this.loop=!1,this._vbuffer=0,this._coord=0,this.visible=!0,this.intensity=1,this.xy=new Float32Array([]),this.numPoints=0,this.color=new g(0,0,0,1),this.webglNumPoints=0}},m=class extends p{constructor(e,t){super(),this.currentIndex=0,this.webglNumPoints=t,this.numPoints=t,this.color=e,this.xy=new Float32Array(2*this.webglNumPoints)}setX(e,t){this.xy[e*2]=t}setY(e,t){this.xy[e*2+1]=t}getX(e){return this.xy[e*2]}getY(e){return this.xy[e*2+1]}lineSpaceX(e,t){for(let s=0;s<this.numPoints;s++)this.setX(s,e+t*s)}arrangeX(){this.lineSpaceX(-1,2/this.numPoints)}constY(e){for(let t=0;t<this.numPoints;t++)this.setY(t,e)}shiftAdd(e){let t=e.length;for(let s=0;s<this.numPoints-t;s++)this.setY(s,this.getY(s+t));for(let s=0;s<t;s++)this.setY(s+this.numPoints-t,e[s])}addArrayY(e){if(this.currentIndex+e.length<=this.numPoints)for(let t=0;t<e.length;t++)this.setY(this.currentIndex,e[t]),this.currentIndex++}replaceArrayY(e){if(e.length==this.numPoints)for(let t=0;t<this.numPoints;t++)this.setY(t,e[t])}};var L=(a,e,t)=>{let s={x:0,y:0};return s.x=a.x+e.x*t,s.y=a.y+e.y*t,s},v=a=>_(-a.y,a.x),d=(a,e)=>{let t=R(a,e);return t=A(t),t},Y=(a,e)=>{let t={x:0,y:0};return t.x=a.x+e.x,t.y=a.y+e.y,t},M=(a,e)=>a.x*e.x+a.y*e.y,A=a=>{let e={x:0,y:0},t=a.x*a.x+a.y*a.y;return t>0&&(t=1/Math.sqrt(t),e.x=a.x*t,e.y=a.y*t),e},_=(a,e)=>{let t={x:0,y:0};return t.x=a,t.y=e,t},R=(a,e)=>{let t={x:0,y:0};return t.x=a.x-e.x,t.y=a.y-e.y,t},T=a=>{let e,t={x:0,y:0},s={x:0,y:0},r=[],o=(l,h)=>{r.push({vec2:l,miterLength:h})},i=l=>({x:a[l*2],y:a[l*2+1]});t=d(i(1),i(0)),e=v(t),o(e,1);let n=a.length/2;for(let l=1;l<n-1;l++){let h=i(l-1),c=i(l),f=i(l+1);t=d(c,h),e=v(t),s=d(f,c);let b=S(t,s),w=X(t,b,1);o(b,w)}return t=d(i(n-1),i(n-2)),e=v(t),o(e,1),r},S=(a,e)=>{let t=Y(a,e);return t=A(t),_(-t.y,t.x)},X=(a,e,t)=>{let s=_(-a.y,a.x);return t/M(e,s)},x=class extends p{constructor(e,t,s){super(),this.currentIndex=0,this._thicknessRequested=0,this._actualThickness=0,this.webglNumPoints=t*2,this.numPoints=t,this.color=e,this._thicknessRequested=s,this._linePoints=new Float32Array(t*2),this.xy=new Float32Array(2*this.webglNumPoints)}convertToTriPoints(){let e=this._actualThickness/2,t=T(this._linePoints);for(let s=0;s<this.numPoints;s++){let r=this._linePoints[2*s],o=this._linePoints[2*s+1],i={x:r,y:o},n=L(i,t[s].vec2,t[s].miterLength*e),l=L(i,t[s].vec2,-t[s].miterLength*e);this.xy[s*4]=n.x,this.xy[s*4+1]=n.y,this.xy[s*4+2]=l.x,this.xy[s*4+3]=l.y}}setX(e,t){this._linePoints[e*2]=t}setY(e,t){this._linePoints[e*2+1]=t}lineSpaceX(e,t){for(let s=0;s<this.numPoints;s++)this.setX(s,e+t*s)}setThickness(e){this._thicknessRequested=e}getThickness(){return this._thicknessRequested}setActualThickness(e){this._actualThickness=e}},y=class{constructor(e,t){this.debug=!1,this.addLine=this.addDataLine,t==null?this.webgl=e.getContext("webgl",{antialias:!0,transparent:!1}):(this.webgl=e.getContext("webgl",{antialias:t.antialias,transparent:t.transparent,desynchronized:t.deSync,powerPerformance:t.powerPerformance,preserveDrawing:t.preserveDrawing}),this.debug=t.debug==null?!1:t.debug),this.log("canvas type is: "+e.constructor.name),this.log(`[webgl-plot]:width=${e.width}, height=${e.height}`),this._linesData=[],this._linesAux=[],this._thickLines=[],this._surfaces=[],this.gScaleX=1,this.gScaleY=1,this.gXYratio=1,this.gOffsetX=0,this.gOffsetY=0,this.gLog10X=!1,this.gLog10Y=!1,this.webgl.clear(this.webgl.COLOR_BUFFER_BIT),this.webgl.viewport(0,0,e.width,e.height),this._progLine=this.webgl.createProgram(),this.initThinLineProgram(),this.webgl.enable(this.webgl.BLEND),this.webgl.blendFunc(this.webgl.SRC_ALPHA,this.webgl.ONE_MINUS_SRC_ALPHA)}get linesData(){return this._linesData}get linesAux(){return this._linesAux}get thickLines(){return this._thickLines}get surfaces(){return this._surfaces}_drawLines(e){let t=this.webgl;e.forEach(s=>{if(s.visible){t.useProgram(this._progLine);let r=t.getUniformLocation(this._progLine,"uscale");t.uniformMatrix2fv(r,!1,new Float32Array([s.scaleX*this.gScaleX*(this.gLog10X?1/Math.log(10):1),0,0,s.scaleY*this.gScaleY*this.gXYratio*(this.gLog10Y?1/Math.log(10):1)]));let o=t.getUniformLocation(this._progLine,"uoffset");t.uniform2fv(o,new Float32Array([s.offsetX+this.gOffsetX,s.offsetY+this.gOffsetY]));let i=t.getUniformLocation(this._progLine,"is_log");t.uniform2iv(i,new Int32Array([this.gLog10X?1:0,this.gLog10Y?1:0]));let n=t.getUniformLocation(this._progLine,"uColor");t.uniform4fv(n,[s.color.r,s.color.g,s.color.b,s.color.a]),t.bufferData(t.ARRAY_BUFFER,s.xy,t.STREAM_DRAW),t.drawArrays(s.loop?t.LINE_LOOP:t.LINE_STRIP,0,s.webglNumPoints)}})}_drawSurfaces(e){let t=this.webgl;e.forEach(s=>{if(s.visible){t.useProgram(this._progLine);let r=t.getUniformLocation(this._progLine,"uscale");t.uniformMatrix2fv(r,!1,new Float32Array([s.scaleX*this.gScaleX*(this.gLog10X?1/Math.log(10):1),0,0,s.scaleY*this.gScaleY*this.gXYratio*(this.gLog10Y?1/Math.log(10):1)]));let o=t.getUniformLocation(this._progLine,"uoffset");t.uniform2fv(o,new Float32Array([s.offsetX+this.gOffsetX,s.offsetY+this.gOffsetY]));let i=t.getUniformLocation(this._progLine,"is_log");t.uniform2iv(i,new Int32Array([this.gLog10X?1:0,this.gLog10Y?1:0]));let n=t.getUniformLocation(this._progLine,"uColor");t.uniform4fv(n,[s.color.r,s.color.g,s.color.b,s.color.a]),t.bufferData(t.ARRAY_BUFFER,s.xy,t.STREAM_DRAW),t.drawArrays(t.TRIANGLE_STRIP,0,s.webglNumPoints)}})}_drawTriangles(e){let t=this.webgl;t.bufferData(t.ARRAY_BUFFER,e.xy,t.STREAM_DRAW),t.useProgram(this._progLine);let s=t.getUniformLocation(this._progLine,"uscale");t.uniformMatrix2fv(s,!1,new Float32Array([e.scaleX*this.gScaleX*(this.gLog10X?1/Math.log(10):1),0,0,e.scaleY*this.gScaleY*this.gXYratio*(this.gLog10Y?1/Math.log(10):1)]));let r=t.getUniformLocation(this._progLine,"uoffset");t.uniform2fv(r,new Float32Array([e.offsetX+this.gOffsetX,e.offsetY+this.gOffsetY]));let o=t.getUniformLocation(this._progLine,"is_log");t.uniform2iv(o,new Int32Array([0,0]));let i=t.getUniformLocation(this._progLine,"uColor");t.uniform4fv(i,[e.color.r,e.color.g,e.color.b,e.color.a]),t.drawArrays(t.TRIANGLE_STRIP,0,e.xy.length/2)}_drawThickLines(){this._thickLines.forEach(e=>{if(e.visible){let t=Math.min(this.gScaleX,this.gScaleY);e.setActualThickness(e.getThickness()/t),e.convertToTriPoints(),this._drawTriangles(e)}})}update(){this.clear(),this.draw()}draw(){this._drawLines(this.linesData),this._drawLines(this.linesAux),this._drawThickLines(),this._drawSurfaces(this.surfaces)}clear(){this.webgl.clear(this.webgl.COLOR_BUFFER_BIT)}_addLine(e){e._vbuffer=this.webgl.createBuffer(),this.webgl.bindBuffer(this.webgl.ARRAY_BUFFER,e._vbuffer),this.webgl.bufferData(this.webgl.ARRAY_BUFFER,e.xy,this.webgl.STREAM_DRAW),e._coord=this.webgl.getAttribLocation(this._progLine,"coordinates"),this.webgl.vertexAttribPointer(e._coord,2,this.webgl.FLOAT,!1,0,0),this.webgl.enableVertexAttribArray(e._coord)}addDataLine(e){this._addLine(e),this.linesData.push(e)}addAuxLine(e){this._addLine(e),this.linesAux.push(e)}addThickLine(e){this._addLine(e),this._thickLines.push(e)}addSurface(e){this._addLine(e),this.surfaces.push(e)}initThinLineProgram(){let e=`
      attribute vec2 coordinates;
      uniform mat2 uscale;
      uniform vec2 uoffset;
      uniform ivec2 is_log;

      void main(void) {
         float x = (is_log[0]==1) ? log(coordinates.x) : coordinates.x;
         float y = (is_log[1]==1) ? log(coordinates.y) : coordinates.y;
         vec2 line = vec2(x, y);
         gl_Position = vec4(uscale*line + uoffset, 0.0, 1.0);
      }`,t=this.webgl.createShader(this.webgl.VERTEX_SHADER);this.webgl.shaderSource(t,e),this.webgl.compileShader(t);let s=`
         precision mediump float;
         uniform highp vec4 uColor;
         void main(void) {
            gl_FragColor =  uColor;
         }`,r=this.webgl.createShader(this.webgl.FRAGMENT_SHADER);this.webgl.shaderSource(r,s),this.webgl.compileShader(r),this._progLine=this.webgl.createProgram(),this.webgl.attachShader(this._progLine,t),this.webgl.attachShader(this._progLine,r),this.webgl.linkProgram(this._progLine)}popDataLine(){this.linesData.pop()}removeAllLines(){this._linesData=[],this._linesAux=[],this._thickLines=[],this._surfaces=[]}removeDataLines(){this._linesData=[]}removeAuxLines(){this._linesAux=[]}viewport(e,t,s,r){this.webgl.viewport(e,t,s,r)}log(e){this.debug&&console.log("[webgl-plot]:"+e)}};var u=class{constructor(){this.plots={}}initPlot(e,t){if(t||(t=new y(e.canvas,e.webglOptions)),!e._id){e._id=`plot${Math.floor(Math.random()*1e15)}`;let o={plot:t,settings:e};this.plots[e._id]=o}e.overlay&&(typeof e.overlay!="object"&&(e.overlay=document.createElement("canvas"),e.overlay.style.position="absolute",e.overlay.width=e.canvas.width,e.overlay.height=e.canvas.height,e.canvas.appendChild(e.overlay)),e.overlayCtx=e.overlay.getContext("2d"));let s=0,r=Object.keys(e.lines).length;e.nLines=r;for(let o in e.lines){let i=e.lines[o];if(i.color)Array.isArray(i.color)&&(i.color=new g(...i.color));else{let l=u.HSLToRGB(360*(s/r)%360,100,50);i.color=new g(...l,1)}let n;if(i.nPoints?n=i.nPoints:i.nSec&&i.sps?n=Math.ceil(i.nSec*i.sps):i.values&&(n=i.values.length),!n)return;if(i.points=n,i.width?i.line=new x(i.color,n,i.width):i.line=new m(i.color,n),i.line.arrangeX(),i.values){if(e.overlay){let l=Math.max(...i.values),h=Math.min(...i.values);i.ymin=h,i.ymax=l}i.values.length!==n&&(i.interpolate?i.values.length>n?i.values=u.downsample(i.values,n):i.values.length<n&&(i.values=u.upsample(i.values,n)):i.values.length>i.points?i.values=i.values.slice(i.values.length-i.points):i.values=[...new Array(i.points-i.values.length).fill(0),...i.values])}else i.values=new Array(n).fill(0);if("autoscale"in i||(i.autoscale=!0),i.position||(i.position=s),i.autoscale&&(i.values=u.autoscale(i.values,i.position?i.position:s,r,i.centerZero)),i.values.forEach((l,h)=>i.line.setY(h,l)),t.addDataLine(i.line),"xAxis"in i||(i.xAxis=!0),i.xAxis){i.xColor&&(Array.isArray(i.xColor)?i.xColor=new g(...i.xColor):i.xColor=new g(1,1,1,.3));let l=new m(i.xColor,2);i.autoscale?l.constY((s+1)*2/r-1-1/r):l.constY(.5),l.arrangeX(),i.x=l,t.addAuxLine(l)}if(r>1&&i.autoscale&&s!==r-1){e.dividerColor?Array.isArray(e.dividerColor)&&(e.dividerColor=new g(...e.dividerColor)):e.dividerColor=new g(1,1,1,1);let l=new m(e.dividerColor,2);l.constY((s+1)*2/r-1),l.arrangeX(),i.divider=l,t.addAuxLine(l)}s++}return t.update(),this.plots[e._id]}deinitPlot(e){return typeof e=="string"&&(e=this.plots[e]),e.plot.clear(),e.plot.removeAllLines(),!0}reinitPlot(e,t){return typeof e=="string"&&(e=this.plots[e]),e.plot.clear(),e.plot.removeAllLines(),this.initPlot(t,e.plot)}update(e,t,s=!0){if(typeof e=="string"&&(e=this.plots[e]),!e)return!1;if(t){for(let r in t)if(e.settings.lines[r]){let o=e.settings.lines[r],i=o.values;if(Object.assign(o,t[r]),o.values){if(e.settings.overlay){let n=Math.max(...o.values),l=Math.min(...o.values);o.ymin=l,o.ymax=n}o.autoscale&&(o.values=u.autoscale(o.values,o.position,e.settings.nLines,o.centerZero)),o.values.length!==o.points&&(o.interpolate?o.values.length>o.points?o.values=u.downsample(o.values,o.points):o.values.length<o.points&&(o.values=u.upsample(o.values,o.points)):o.values.length>o.points?o.values=o.values.slice(o.values.length-o.points):o.values=[...i.slice(o.points-o.values.length),...o.values]),o.values.forEach((n,l)=>o.line.setY(l,n))}}}if(typeof e.settings.overlay=="object"){let r=e.settings.overlay,o=e.settings.overlayCtx;o.clearRect(0,0,e.settings.overlay.width,e.settings.overlay.height),o.font="1em Courier",o.fillStyle="white";for(let i in e.settings.lines){let n=e.settings.lines[i];(n.useOverlay||!("useOverlay"in n))&&(o.fillText(i,20,r.height*(n.position+.1)/e.settings.nLines),o.fillText(n.ymax,r.width-70,r.height*(n.position+.1)/e.settings.nLines),o.fillText(n.ymin,r.width-70,r.height*(n.position+.9)/e.settings.nLines))}}return s&&e.plot.update(),!0}updateLine(e,t,s,r,o,i,n){return e.numPoints!==t.length&&(s?e.numPoints>t.length?t=u.downsample(t,e.numPoints):e.numPoints<t.length&&(t=u.upsample(t,e.numPoints)):t.length>e.numPoints?t=t.slice(t.length-e.numPoints):t=[...new Array(e.numPoints-t.length).fill(0),...t]),r&&(t=u.autoscale(t,o,i,n)),t.forEach((l,h)=>e.setY(h,l)),!0}static autoscale(e,t=0,s=1,r=!1){if(e?.length===0)return e;let o=Math.max(...e),i=Math.min(...e),n=1/s,l;if(r){let h=Math.max(Math.abs(i),Math.abs(o));return l=n/h,e.map(c=>c*l+(n*(t+1)*2-1-n))}else return l=n/(o-i),e.map(h=>2*((h-i)*l-1/(2*s))+(n*(t+1)*2-1-n))}static absmax(e){return Math.max(Math.abs(Math.min(...e)),Math.max(...e))}static downsample(e,t,s=1){if(e.length>t){let r=new Array(t),o=e.length/t,i=e.length-1,n=0,l=0;for(let h=o;h<e.length;h+=o){let c=Math.round(h);c>i&&(c=i);for(let f=n;f<c;f++)r[l]+=e[f];r[l]/=(c-n)*s,l++,n=c}return r}else return e}static upsample(e,t,s=1){var r=function(b,w,P){return(b+(w-b)*P)*s},o=new Array(t),i=(e.length-1)/(t-1);o[0]=e[0];for(var n=1;n<t-1;n++){var l=n*i,h=Math.floor(l),c=Math.ceil(l),f=l-h;o[n]=r(e[h],e[c],f)}return o[t-1]=e[e.length-1],o}static interpolate(e,t,s=1){return e.length>t?u.downsample(e,t,s):e.length<t?u.upsample(e,t,s):e}static HSLToRGB(e,t,s){t/=100,s/=100;let r=(1-Math.abs(2*s-1))*t,o=r*(1-Math.abs(e/60%2-1)),i=s-r/2,n=0,l=0,h=0;return 0<=e&&e<60?(n=r,l=o,h=0):60<=e&&e<120?(n=o,l=r,h=0):120<=e&&e<180?(n=0,l=r,h=o):180<=e&&e<240?(n=0,l=o,h=r):240<=e&&e<300?(n=o,l=0,h=r):300<=e&&e<360&&(n=r,l=0,h=o),n=Math.round((n+i)*255),l=Math.round((l+i)*255),h=Math.round((h+i)*255),[n,l,h]}static circularBuffer(e,t){return t.length<e.length?e.splice(0,e.length-t.length,...e.slice(t.length)).splice(e.length-t.length,e.length,...t):t.length>e.length?e.splice(0,e.length,t.slice(t.length-e.length)):e.splice(0,e.length,...t),e}static formatDataForCharts(e,t){if(typeof e=="object")for(let s in e)typeof e[s]=="number"&&(e[s]=[e[s]]);else if(typeof e=="string"){let s;e.includes("	")?s=e.split("	"):e.includes(",")&&(s=e.split(",")),e={},s.forEach((r,o)=>{if(r.includes(":")){let[i,n]=r.split(":");e[i]=[parseFloat(n)]}else e[o]=[parseFloat(r)]})}else Array.isArray(e)?t?e={[t]:e}:e={0:e}:typeof e=="number"&&(t?e={[t]:[e]}:e={0:[e]});return e}static padTime(e,t,s,r){let o=(e[0]-t)/s/r;return[...new Array(r-e.length).map((n,l)=>t+o*(l+1)),...e]}static interpolateForTime(e,t,s){return u.interpolate(e,Math.ceil(s*t))}};export{u as WebglLinePlotUtil};
