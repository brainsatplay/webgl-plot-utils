var g=class{constructor(t,e,i,r){this.r=t,this.g=e,this.b=i,this.a=r}},x=class{constructor(){this.scaleX=1,this.scaleY=1,this.offsetX=0,this.offsetY=0,this.loop=!1,this._vbuffer=0,this._coord=0,this.visible=!0,this.intensity=1,this.xy=new Float32Array([]),this.numPoints=0,this.color=new g(0,0,0,1),this.webglNumPoints=0}},m=class extends x{constructor(t,e){super(),this.currentIndex=0,this.webglNumPoints=e,this.numPoints=e,this.color=t,this.xy=new Float32Array(2*this.webglNumPoints)}setX(t,e){this.xy[t*2]=e}setY(t,e){this.xy[t*2+1]=e}getX(t){return this.xy[t*2]}getY(t){return this.xy[t*2+1]}lineSpaceX(t,e){for(let i=0;i<this.numPoints;i++)this.setX(i,t+e*i)}arrangeX(){this.lineSpaceX(-1,2/this.numPoints)}constY(t){for(let e=0;e<this.numPoints;e++)this.setY(e,t)}shiftAdd(t){let e=t.length;for(let i=0;i<this.numPoints-e;i++)this.setY(i,this.getY(i+e));for(let i=0;i<e;i++)this.setY(i+this.numPoints-e,t[i])}addArrayY(t){if(this.currentIndex+t.length<=this.numPoints)for(let e=0;e<t.length;e++)this.setY(this.currentIndex,t[e]),this.currentIndex++}replaceArrayY(t){if(t.length==this.numPoints)for(let e=0;e<this.numPoints;e++)this.setY(e,t[e])}};var A=(h,t,e)=>{let i={x:0,y:0};return i.x=h.x+t.x*e,i.y=h.y+t.y*e,i},p=h=>_(-h.y,h.x),b=(h,t)=>{let e=M(h,t);return e=L(e),e},Y=(h,t)=>{let e={x:0,y:0};return e.x=h.x+t.x,e.y=h.y+t.y,e},R=(h,t)=>h.x*t.x+h.y*t.y,L=h=>{let t={x:0,y:0},e=h.x*h.x+h.y*h.y;return e>0&&(e=1/Math.sqrt(e),t.x=h.x*e,t.y=h.y*e),t},_=(h,t)=>{let e={x:0,y:0};return e.x=h,e.y=t,e},M=(h,t)=>{let e={x:0,y:0};return e.x=h.x-t.x,e.y=h.y-t.y,e},S=h=>{let t,e={x:0,y:0},i={x:0,y:0},r=[],o=(n,a)=>{r.push({vec2:n,miterLength:a})},l=n=>({x:h[n*2],y:h[n*2+1]});e=b(l(1),l(0)),t=p(e),o(t,1);let s=h.length/2;for(let n=1;n<s-1;n++){let a=l(n-1),c=l(n),f=l(n+1);e=b(c,a),t=p(e),i=b(f,c);let d=T(e,i),v=X(e,d,1);o(d,v)}return e=b(l(s-1),l(s-2)),t=p(e),o(t,1),r},T=(h,t)=>{let e=Y(h,t);return e=L(e),_(-e.y,e.x)},X=(h,t,e)=>{let i=_(-h.y,h.x);return e/R(t,i)},w=class extends x{constructor(t,e,i){super(),this.currentIndex=0,this._thicknessRequested=0,this._actualThickness=0,this.webglNumPoints=e*2,this.numPoints=e,this.color=t,this._thicknessRequested=i,this._linePoints=new Float32Array(e*2),this.xy=new Float32Array(2*this.webglNumPoints)}convertToTriPoints(){let t=this._actualThickness/2,e=S(this._linePoints);for(let i=0;i<this.numPoints;i++){let r=this._linePoints[2*i],o=this._linePoints[2*i+1],l={x:r,y:o},s=A(l,e[i].vec2,e[i].miterLength*t),n=A(l,e[i].vec2,-e[i].miterLength*t);this.xy[i*4]=s.x,this.xy[i*4+1]=s.y,this.xy[i*4+2]=n.x,this.xy[i*4+3]=n.y}}setX(t,e){this._linePoints[t*2]=e}setY(t,e){this._linePoints[t*2+1]=e}lineSpaceX(t,e){for(let i=0;i<this.numPoints;i++)this.setX(i,t+e*i)}setThickness(t){this._thicknessRequested=t}getThickness(){return this._thicknessRequested}setActualThickness(t){this._actualThickness=t}},y=class{constructor(t,e){this.debug=!1,this.addLine=this.addDataLine,e==null?this.webgl=t.getContext("webgl",{antialias:!0,transparent:!1}):(this.webgl=t.getContext("webgl",{antialias:e.antialias,transparent:e.transparent,desynchronized:e.deSync,powerPerformance:e.powerPerformance,preserveDrawing:e.preserveDrawing}),this.debug=e.debug==null?!1:e.debug),this.log("canvas type is: "+t.constructor.name),this.log(`[webgl-plot]:width=${t.width}, height=${t.height}`),this._linesData=[],this._linesAux=[],this._thickLines=[],this._surfaces=[],this.gScaleX=1,this.gScaleY=1,this.gXYratio=1,this.gOffsetX=0,this.gOffsetY=0,this.gLog10X=!1,this.gLog10Y=!1,this.webgl.clear(this.webgl.COLOR_BUFFER_BIT),this.webgl.viewport(0,0,t.width,t.height),this._progLine=this.webgl.createProgram(),this.initThinLineProgram(),this.webgl.enable(this.webgl.BLEND),this.webgl.blendFunc(this.webgl.SRC_ALPHA,this.webgl.ONE_MINUS_SRC_ALPHA)}get linesData(){return this._linesData}get linesAux(){return this._linesAux}get thickLines(){return this._thickLines}get surfaces(){return this._surfaces}_drawLines(t){let e=this.webgl;t.forEach(i=>{if(i.visible){e.useProgram(this._progLine);let r=e.getUniformLocation(this._progLine,"uscale");e.uniformMatrix2fv(r,!1,new Float32Array([i.scaleX*this.gScaleX*(this.gLog10X?1/Math.log(10):1),0,0,i.scaleY*this.gScaleY*this.gXYratio*(this.gLog10Y?1/Math.log(10):1)]));let o=e.getUniformLocation(this._progLine,"uoffset");e.uniform2fv(o,new Float32Array([i.offsetX+this.gOffsetX,i.offsetY+this.gOffsetY]));let l=e.getUniformLocation(this._progLine,"is_log");e.uniform2iv(l,new Int32Array([this.gLog10X?1:0,this.gLog10Y?1:0]));let s=e.getUniformLocation(this._progLine,"uColor");e.uniform4fv(s,[i.color.r,i.color.g,i.color.b,i.color.a]),e.bufferData(e.ARRAY_BUFFER,i.xy,e.STREAM_DRAW),e.drawArrays(i.loop?e.LINE_LOOP:e.LINE_STRIP,0,i.webglNumPoints)}})}_drawSurfaces(t){let e=this.webgl;t.forEach(i=>{if(i.visible){e.useProgram(this._progLine);let r=e.getUniformLocation(this._progLine,"uscale");e.uniformMatrix2fv(r,!1,new Float32Array([i.scaleX*this.gScaleX*(this.gLog10X?1/Math.log(10):1),0,0,i.scaleY*this.gScaleY*this.gXYratio*(this.gLog10Y?1/Math.log(10):1)]));let o=e.getUniformLocation(this._progLine,"uoffset");e.uniform2fv(o,new Float32Array([i.offsetX+this.gOffsetX,i.offsetY+this.gOffsetY]));let l=e.getUniformLocation(this._progLine,"is_log");e.uniform2iv(l,new Int32Array([this.gLog10X?1:0,this.gLog10Y?1:0]));let s=e.getUniformLocation(this._progLine,"uColor");e.uniform4fv(s,[i.color.r,i.color.g,i.color.b,i.color.a]),e.bufferData(e.ARRAY_BUFFER,i.xy,e.STREAM_DRAW),e.drawArrays(e.TRIANGLE_STRIP,0,i.webglNumPoints)}})}_drawTriangles(t){let e=this.webgl;e.bufferData(e.ARRAY_BUFFER,t.xy,e.STREAM_DRAW),e.useProgram(this._progLine);let i=e.getUniformLocation(this._progLine,"uscale");e.uniformMatrix2fv(i,!1,new Float32Array([t.scaleX*this.gScaleX*(this.gLog10X?1/Math.log(10):1),0,0,t.scaleY*this.gScaleY*this.gXYratio*(this.gLog10Y?1/Math.log(10):1)]));let r=e.getUniformLocation(this._progLine,"uoffset");e.uniform2fv(r,new Float32Array([t.offsetX+this.gOffsetX,t.offsetY+this.gOffsetY]));let o=e.getUniformLocation(this._progLine,"is_log");e.uniform2iv(o,new Int32Array([0,0]));let l=e.getUniformLocation(this._progLine,"uColor");e.uniform4fv(l,[t.color.r,t.color.g,t.color.b,t.color.a]),e.drawArrays(e.TRIANGLE_STRIP,0,t.xy.length/2)}_drawThickLines(){this._thickLines.forEach(t=>{if(t.visible){let e=Math.min(this.gScaleX,this.gScaleY);t.setActualThickness(t.getThickness()/e),t.convertToTriPoints(),this._drawTriangles(t)}})}update(){this.clear(),this.draw()}draw(){this._drawLines(this.linesData),this._drawLines(this.linesAux),this._drawThickLines(),this._drawSurfaces(this.surfaces)}clear(){this.webgl.clear(this.webgl.COLOR_BUFFER_BIT)}_addLine(t){t._vbuffer=this.webgl.createBuffer(),this.webgl.bindBuffer(this.webgl.ARRAY_BUFFER,t._vbuffer),this.webgl.bufferData(this.webgl.ARRAY_BUFFER,t.xy,this.webgl.STREAM_DRAW),t._coord=this.webgl.getAttribLocation(this._progLine,"coordinates"),this.webgl.vertexAttribPointer(t._coord,2,this.webgl.FLOAT,!1,0,0),this.webgl.enableVertexAttribArray(t._coord)}addDataLine(t){this._addLine(t),this.linesData.push(t)}addAuxLine(t){this._addLine(t),this.linesAux.push(t)}addThickLine(t){this._addLine(t),this._thickLines.push(t)}addSurface(t){this._addLine(t),this.surfaces.push(t)}initThinLineProgram(){let t=`
      attribute vec2 coordinates;
      uniform mat2 uscale;
      uniform vec2 uoffset;
      uniform ivec2 is_log;

      void main(void) {
         float x = (is_log[0]==1) ? log(coordinates.x) : coordinates.x;
         float y = (is_log[1]==1) ? log(coordinates.y) : coordinates.y;
         vec2 line = vec2(x, y);
         gl_Position = vec4(uscale*line + uoffset, 0.0, 1.0);
      }`,e=this.webgl.createShader(this.webgl.VERTEX_SHADER);this.webgl.shaderSource(e,t),this.webgl.compileShader(e);let i=`
         precision mediump float;
         uniform highp vec4 uColor;
         void main(void) {
            gl_FragColor =  uColor;
         }`,r=this.webgl.createShader(this.webgl.FRAGMENT_SHADER);this.webgl.shaderSource(r,i),this.webgl.compileShader(r),this._progLine=this.webgl.createProgram(),this.webgl.attachShader(this._progLine,e),this.webgl.attachShader(this._progLine,r),this.webgl.linkProgram(this._progLine)}popDataLine(){this.linesData.pop()}removeAllLines(){this._linesData=[],this._linesAux=[],this._thickLines=[],this._surfaces=[]}removeDataLines(){this._linesData=[]}removeAuxLines(){this._linesAux=[]}viewport(t,e,i,r){this.webgl.viewport(t,e,i,r)}log(t){this.debug&&console.log("[webgl-plot]:"+t)}};var u=class{constructor(){this.plots={}}initPlot(t,e){e||(e=new y(t.canvas,t.webglOptions));let i={plot:e,settings:t};t._id||(t._id=`plot${Math.floor(Math.random()*1e15)}`,this.plots[t._id]=i),t.overlay&&(typeof t.overlay=="object"?t.overlay=t.overlay:(t.overlay=document.createElement("canvas"),t.overlay.style.position="absolute",t.overlay.width=t.canvas.width,t.overlay.height=t.canvas.height,t.canvas.appendChild(i.overlay)),t.overlayCtx=t.overlay.getContext("2d"));let r=0,o=Object.keys(t.lines).length;t.nLines=o;for(let l in t.lines){let s=t.lines[l];if(s.color)Array.isArray(s.color)&&(s.color=new g(...s.color));else{let a=u.HSLToRGB(360*(r/o)%360,100,50);s.color=new g(...a,1)}let n;if(s.nPoints?n=s.nPoints:s.nSec&&s.sps?n=Math.ceil(s.nSec*s.sps):s.values&&(n=s.values.length),!n)return;if(s.points=n,s.width?s.line=new w(s.color,n,s.width):s.line=new m(s.color,n),s.line.arrangeX(),s.values?s.values.length!==n&&(s.interpolate?s.values.length>n?s.values=u.downsample(s.values,n):s.values.length<n&&(s.values=u.upsample(s.values,n)):s.values=s.values.slice(s.values.length-n)):s.values=new Array(n).fill(0),"autoscale"in s||(s.autoscale=!0),s.position||(s.position=r),s.autoscale&&(s.values=u.autoscale(s.values,s.position?s.position:r,o,s.centerZero)),s.values.forEach((a,c)=>s.line.setY(c,a)),e.addDataLine(s.line),"xAxis"in s||(s.xAxis=!0),s.xAxis){s.xColor&&(Array.isArray(s.xColor)?s.xColor=new g(...s.xColor):s.xColor=new g(1,1,1,.3));let a=new m(s.xColor,2);s.autoscale?a.constY((r+1)*2/o-1-1/o):a.constY(.5),a.arrangeX(),s.x=a,e.addAuxLine(a)}if(o>1&&s.autoscale&&r!==o-1){t.dividerColor?Array.isArray(t.dividerColor)&&(t.dividerColor=new g(...t.dividerColor)):t.dividerColor=new g(1,1,1,1);let a=new m(t.dividerColor,2);a.constY((r+1)*2/o-1),a.arrangeX(),s.divider=a,e.addAuxLine(a)}r++}return i}deinitPlot(t){return t.plot.clear(),t.plot.removeAllLines(),!0}update(t,e,i=!0){if(typeof t=="string"&&(t=this.plots[t]),!!t){if(e){for(let r in e)if(t.settings.lines[r]){let o=t.settings.lines[r],l=e[r];if(l.values){if(t.settings.overlay){let s=Math.max(...l.values),n=Math.min(...l.values);o.ymin=n,o.ymax=s}o.values=l.values,o.values.length!==o.points&&(o.interpolate?o.values.length>o.points?o.values=u.downsample(o.values,o.points):o.values.length<o.points&&(o.values=u.upsample(o.values,o.points)):o.values=o.values.slice(o.values.length-o.points)),o.autoscale&&(o.values=u.autoscale(o.values,o.position,t.settings.nLines,o.centerZero)),o.values.forEach((s,n)=>o.line.setY(n,s))}}}if(typeof t.settings.overlay=="object"){let r=t.settings.overlay,o=t.settings.overlayCtx;o.clearRect(0,0,t.settings.overlay.width,t.settings.overlay.height),o.font="1em Courier",o.fillStyle="white";for(let l in t.settings.lines){let s=t.settings.lines[l];o.fillText(l,20,r.height*(s.position+.1)/t.settings.nLines),o.fillText(s.ymax,r.width-70,r.height*(s.position+.1)/t.settings.nLines),o.fillText(s.ymin,r.width-70,r.height*(s.position+.9)/t.settings.nLines)}}i&&t.plot.update()}}updateLine(t,e,i,r,o,l,s){return t.numPoints!==e.length&&(i?t.numPoints>e.length?e=u.downsample(e,t.numPoints):t.numPoints<e.length&&(e=u.upsample(e,t.numPoints)):e=e.slice(e.length-t.numPoints)),r&&(e=u.autoscale(e,o,l,s)),e.forEach((n,a)=>t.setY(a,n)),!0}static autoscale(t,e=0,i=1,r=!1){if(t?.length===0)return t;let o=Math.max(...t),l=Math.min(...t),s=1/i,n;if(r){let a=Math.max(Math.abs(l),Math.abs(o));return n=s/a,t.map(c=>c*n+(s*(e+1)*2-1-s))}else return n=s/(o-l),t.map(a=>2*((a-l)*n-1/(2*i))+(s*(e+1)*2-1-s))}static absmax(t){return Math.max(Math.abs(Math.min(...t)),Math.max(...t))}static downsample(t,e,i=1){if(t.length>e){let r=new Array(e),o=t.length/e,l=t.length-1,s=0,n=0;for(let a=o;a<t.length;a+=o){let c=Math.round(a);c>l&&(c=l);for(let f=s;f<c;f++)r[n]+=t[f];r[n]/=(c-s)*i,n++,s=c}return r}else return t}static upsample(t,e,i=1){var r=function(d,v,P){return(d+(v-d)*P)*i},o=new Array(e),l=(t.length-1)/(e-1);o[0]=t[0];for(var s=1;s<e-1;s++){var n=s*l,a=Math.floor(n),c=Math.ceil(n),f=n-a;o[s]=r(t[a],t[c],f)}return o[e-1]=t[t.length-1],o}static HSLToRGB(t,e,i){e/=100,i/=100;let r=(1-Math.abs(2*i-1))*e,o=r*(1-Math.abs(t/60%2-1)),l=i-r/2,s=0,n=0,a=0;return 0<=t&&t<60?(s=r,n=o,a=0):60<=t&&t<120?(s=o,n=r,a=0):120<=t&&t<180?(s=0,n=r,a=o):180<=t&&t<240?(s=0,n=o,a=r):240<=t&&t<300?(s=o,n=0,a=r):300<=t&&t<360&&(s=r,n=0,a=o),s=Math.round((s+l)*255),n=Math.round((n+l)*255),a=Math.round((a+l)*255),[s,n,a]}static circularBuffer(t,e){return e.length<t.length?t.splice(0,t.length-e.length,...t.slice(e.length)).splice(t.length-e.length,t.length,...e):e.length>t.length?t.splice(0,t.length,e.slice(e.length-t.length)):t.splice(0,t.length,...e),t}};export{u as WebGLLinePlotUtil};
