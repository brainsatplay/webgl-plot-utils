(()=>{var g=class{constructor(e,t,i,r){this.r=e,this.g=t,this.b=i,this.a=r}},p=class{constructor(){this.scaleX=1,this.scaleY=1,this.offsetX=0,this.offsetY=0,this.loop=!1,this._vbuffer=0,this._coord=0,this.visible=!0,this.intensity=1,this.xy=new Float32Array([]),this.numPoints=0,this.color=new g(0,0,0,1),this.webglNumPoints=0}},m=class extends p{constructor(e,t){super(),this.currentIndex=0,this.webglNumPoints=t,this.numPoints=t,this.color=e,this.xy=new Float32Array(2*this.webglNumPoints)}setX(e,t){this.xy[e*2]=t}setY(e,t){this.xy[e*2+1]=t}getX(e){return this.xy[e*2]}getY(e){return this.xy[e*2+1]}lineSpaceX(e,t){for(let i=0;i<this.numPoints;i++)this.setX(i,e+t*i)}arrangeX(){this.lineSpaceX(-1,2/this.numPoints)}constY(e){for(let t=0;t<this.numPoints;t++)this.setY(t,e)}shiftAdd(e){let t=e.length;for(let i=0;i<this.numPoints-t;i++)this.setY(i,this.getY(i+t));for(let i=0;i<t;i++)this.setY(i+this.numPoints-t,e[i])}addArrayY(e){if(this.currentIndex+e.length<=this.numPoints)for(let t=0;t<e.length;t++)this.setY(this.currentIndex,e[t]),this.currentIndex++}replaceArrayY(e){if(e.length==this.numPoints)for(let t=0;t<this.numPoints;t++)this.setY(t,e[t])}};var A=(a,e,t)=>{let i={x:0,y:0};return i.x=a.x+e.x*t,i.y=a.y+e.y*t,i},w=a=>L(-a.y,a.x),y=(a,e)=>{let t=R(a,e);return t=_(t),t},Y=(a,e)=>{let t={x:0,y:0};return t.x=a.x+e.x,t.y=a.y+e.y,t},M=(a,e)=>a.x*e.x+a.y*e.y,_=a=>{let e={x:0,y:0},t=a.x*a.x+a.y*a.y;return t>0&&(t=1/Math.sqrt(t),e.x=a.x*t,e.y=a.y*t),e},L=(a,e)=>{let t={x:0,y:0};return t.x=a,t.y=e,t},R=(a,e)=>{let t={x:0,y:0};return t.x=a.x-e.x,t.y=a.y-e.y,t},T=a=>{let e,t={x:0,y:0},i={x:0,y:0},r=[],l=(n,h)=>{r.push({vec2:n,miterLength:h})},s=n=>({x:a[n*2],y:a[n*2+1]});t=y(s(1),s(0)),e=w(t),l(e,1);let o=a.length/2;for(let n=1;n<o-1;n++){let h=s(n-1),c=s(n),f=s(n+1);t=y(c,h),e=w(t),i=y(f,c);let b=S(t,i),v=X(t,b,1);l(b,v)}return t=y(s(o-1),s(o-2)),e=w(t),l(e,1),r},S=(a,e)=>{let t=Y(a,e);return t=_(t),L(-t.y,t.x)},X=(a,e,t)=>{let i=L(-a.y,a.x);return t/M(e,i)},d=class extends p{constructor(e,t,i){super(),this.currentIndex=0,this._thicknessRequested=0,this._actualThickness=0,this.webglNumPoints=t*2,this.numPoints=t,this.color=e,this._thicknessRequested=i,this._linePoints=new Float32Array(t*2),this.xy=new Float32Array(2*this.webglNumPoints)}convertToTriPoints(){let e=this._actualThickness/2,t=T(this._linePoints);for(let i=0;i<this.numPoints;i++){let r=this._linePoints[2*i],l=this._linePoints[2*i+1],s={x:r,y:l},o=A(s,t[i].vec2,t[i].miterLength*e),n=A(s,t[i].vec2,-t[i].miterLength*e);this.xy[i*4]=o.x,this.xy[i*4+1]=o.y,this.xy[i*4+2]=n.x,this.xy[i*4+3]=n.y}}setX(e,t){this._linePoints[e*2]=t}setY(e,t){this._linePoints[e*2+1]=t}lineSpaceX(e,t){for(let i=0;i<this.numPoints;i++)this.setX(i,e+t*i)}setThickness(e){this._thicknessRequested=e}getThickness(){return this._thicknessRequested}setActualThickness(e){this._actualThickness=e}},x=class{constructor(e,t){this.debug=!1,this.addLine=this.addDataLine,t==null?this.webgl=e.getContext("webgl",{antialias:!0,transparent:!1}):(this.webgl=e.getContext("webgl",{antialias:t.antialias,transparent:t.transparent,desynchronized:t.deSync,powerPerformance:t.powerPerformance,preserveDrawing:t.preserveDrawing}),this.debug=t.debug==null?!1:t.debug),this.log("canvas type is: "+e.constructor.name),this.log(`[webgl-plot]:width=${e.width}, height=${e.height}`),this._linesData=[],this._linesAux=[],this._thickLines=[],this._surfaces=[],this.gScaleX=1,this.gScaleY=1,this.gXYratio=1,this.gOffsetX=0,this.gOffsetY=0,this.gLog10X=!1,this.gLog10Y=!1,this.webgl.clear(this.webgl.COLOR_BUFFER_BIT),this.webgl.viewport(0,0,e.width,e.height),this._progLine=this.webgl.createProgram(),this.initThinLineProgram(),this.webgl.enable(this.webgl.BLEND),this.webgl.blendFunc(this.webgl.SRC_ALPHA,this.webgl.ONE_MINUS_SRC_ALPHA)}get linesData(){return this._linesData}get linesAux(){return this._linesAux}get thickLines(){return this._thickLines}get surfaces(){return this._surfaces}_drawLines(e){let t=this.webgl;e.forEach(i=>{if(i.visible){t.useProgram(this._progLine);let r=t.getUniformLocation(this._progLine,"uscale");t.uniformMatrix2fv(r,!1,new Float32Array([i.scaleX*this.gScaleX*(this.gLog10X?1/Math.log(10):1),0,0,i.scaleY*this.gScaleY*this.gXYratio*(this.gLog10Y?1/Math.log(10):1)]));let l=t.getUniformLocation(this._progLine,"uoffset");t.uniform2fv(l,new Float32Array([i.offsetX+this.gOffsetX,i.offsetY+this.gOffsetY]));let s=t.getUniformLocation(this._progLine,"is_log");t.uniform2iv(s,new Int32Array([this.gLog10X?1:0,this.gLog10Y?1:0]));let o=t.getUniformLocation(this._progLine,"uColor");t.uniform4fv(o,[i.color.r,i.color.g,i.color.b,i.color.a]),t.bufferData(t.ARRAY_BUFFER,i.xy,t.STREAM_DRAW),t.drawArrays(i.loop?t.LINE_LOOP:t.LINE_STRIP,0,i.webglNumPoints)}})}_drawSurfaces(e){let t=this.webgl;e.forEach(i=>{if(i.visible){t.useProgram(this._progLine);let r=t.getUniformLocation(this._progLine,"uscale");t.uniformMatrix2fv(r,!1,new Float32Array([i.scaleX*this.gScaleX*(this.gLog10X?1/Math.log(10):1),0,0,i.scaleY*this.gScaleY*this.gXYratio*(this.gLog10Y?1/Math.log(10):1)]));let l=t.getUniformLocation(this._progLine,"uoffset");t.uniform2fv(l,new Float32Array([i.offsetX+this.gOffsetX,i.offsetY+this.gOffsetY]));let s=t.getUniformLocation(this._progLine,"is_log");t.uniform2iv(s,new Int32Array([this.gLog10X?1:0,this.gLog10Y?1:0]));let o=t.getUniformLocation(this._progLine,"uColor");t.uniform4fv(o,[i.color.r,i.color.g,i.color.b,i.color.a]),t.bufferData(t.ARRAY_BUFFER,i.xy,t.STREAM_DRAW),t.drawArrays(t.TRIANGLE_STRIP,0,i.webglNumPoints)}})}_drawTriangles(e){let t=this.webgl;t.bufferData(t.ARRAY_BUFFER,e.xy,t.STREAM_DRAW),t.useProgram(this._progLine);let i=t.getUniformLocation(this._progLine,"uscale");t.uniformMatrix2fv(i,!1,new Float32Array([e.scaleX*this.gScaleX*(this.gLog10X?1/Math.log(10):1),0,0,e.scaleY*this.gScaleY*this.gXYratio*(this.gLog10Y?1/Math.log(10):1)]));let r=t.getUniformLocation(this._progLine,"uoffset");t.uniform2fv(r,new Float32Array([e.offsetX+this.gOffsetX,e.offsetY+this.gOffsetY]));let l=t.getUniformLocation(this._progLine,"is_log");t.uniform2iv(l,new Int32Array([0,0]));let s=t.getUniformLocation(this._progLine,"uColor");t.uniform4fv(s,[e.color.r,e.color.g,e.color.b,e.color.a]),t.drawArrays(t.TRIANGLE_STRIP,0,e.xy.length/2)}_drawThickLines(){this._thickLines.forEach(e=>{if(e.visible){let t=Math.min(this.gScaleX,this.gScaleY);e.setActualThickness(e.getThickness()/t),e.convertToTriPoints(),this._drawTriangles(e)}})}update(){this.clear(),this.draw()}draw(){this._drawLines(this.linesData),this._drawLines(this.linesAux),this._drawThickLines(),this._drawSurfaces(this.surfaces)}clear(){this.webgl.clear(this.webgl.COLOR_BUFFER_BIT)}_addLine(e){e._vbuffer=this.webgl.createBuffer(),this.webgl.bindBuffer(this.webgl.ARRAY_BUFFER,e._vbuffer),this.webgl.bufferData(this.webgl.ARRAY_BUFFER,e.xy,this.webgl.STREAM_DRAW),e._coord=this.webgl.getAttribLocation(this._progLine,"coordinates"),this.webgl.vertexAttribPointer(e._coord,2,this.webgl.FLOAT,!1,0,0),this.webgl.enableVertexAttribArray(e._coord)}addDataLine(e){this._addLine(e),this.linesData.push(e)}addAuxLine(e){this._addLine(e),this.linesAux.push(e)}addThickLine(e){this._addLine(e),this._thickLines.push(e)}addSurface(e){this._addLine(e),this.surfaces.push(e)}initThinLineProgram(){let e=`
      attribute vec2 coordinates;
      uniform mat2 uscale;
      uniform vec2 uoffset;
      uniform ivec2 is_log;

      void main(void) {
         float x = (is_log[0]==1) ? log(coordinates.x) : coordinates.x;
         float y = (is_log[1]==1) ? log(coordinates.y) : coordinates.y;
         vec2 line = vec2(x, y);
         gl_Position = vec4(uscale*line + uoffset, 0.0, 1.0);
      }`,t=this.webgl.createShader(this.webgl.VERTEX_SHADER);this.webgl.shaderSource(t,e),this.webgl.compileShader(t);let i=`
         precision mediump float;
         uniform highp vec4 uColor;
         void main(void) {
            gl_FragColor =  uColor;
         }`,r=this.webgl.createShader(this.webgl.FRAGMENT_SHADER);this.webgl.shaderSource(r,i),this.webgl.compileShader(r),this._progLine=this.webgl.createProgram(),this.webgl.attachShader(this._progLine,t),this.webgl.attachShader(this._progLine,r),this.webgl.linkProgram(this._progLine)}popDataLine(){this.linesData.pop()}removeAllLines(){this._linesData=[],this._linesAux=[],this._thickLines=[],this._surfaces=[]}removeDataLines(){this._linesData=[]}removeAuxLines(){this._linesAux=[]}viewport(e,t,i,r){this.webgl.viewport(e,t,i,r)}log(e){this.debug&&console.log("[webgl-plot]:"+e)}};var u=class{constructor(){this.plots={}}initPlot(e,t){if(t||(t=new x(e.canvas,e.webglOptions)),!e._id){e._id=`plot${Math.floor(Math.random()*1e15)}`;let l={plot:t,settings:e};this.plots[e._id]=l}e.overlay&&(typeof e.overlay!="object"&&(e.overlay=document.createElement("canvas"),e.overlay.style.position="absolute",e.overlay.width=e.canvas.width,e.overlay.height=e.canvas.height,e.canvas.appendChild(e.overlay)),e.overlayCtx=e.overlay.getContext("2d"));let i=0,r=Object.keys(e.lines).length;e.nLines=r;for(let l in e.lines){let s=e.lines[l];if(Array.isArray(s)&&(s={values:s},e.lines[l]=s),s.color)Array.isArray(s.color)&&(s.color=new g(...s.color));else{let n=u.HSLToRGB(360*(i/r)%360,100,50);s.color=new g(...n,1)}let o;if(s.nPoints?o=s.nPoints:s.nSec&&s.sps?o=Math.ceil(s.nSec*s.sps):s.values&&(o=s.values.length),!o)return;if(s.points=o,s.width?s.line=new d(s.color,o,s.width):s.line=new m(s.color,o),s.line.arrangeX(),s.values){if(e.overlay){let n=Math.max(...s.values),h=Math.min(...s.values);s.ymin=h,s.ymax=n}s.values.length!==o&&(s.interpolate?s.values.length>o?s.values=u.downsample(s.values,o):s.values.length<o&&(s.values=u.upsample(s.values,o)):s.values.length>s.points?s.values=s.values.slice(s.values.length-s.points):s.values=[...new Array(s.points-s.values.length).fill(0),...s.values])}else s.values=new Array(o).fill(0);if("autoscale"in s||(s.autoscale=!0),s.position||(s.position=i),s.autoscale&&(s.values=u.autoscale(s.values,s.position?s.position:i,r,s.centerZero)),s.values.forEach((n,h)=>s.line.setY(h,n)),t.addDataLine(s.line),"xAxis"in s||(s.xAxis=!0),s.xAxis){s.xColor&&(Array.isArray(s.xColor)?s.xColor=new g(...s.xColor):s.xColor=new g(1,1,1,.3));let n=new m(s.xColor,2);s.autoscale?n.constY((i+1)*2/r-1-1/r):n.constY(.5),n.arrangeX(),s.x=n,t.addAuxLine(n)}if(r>1&&s.autoscale&&i!==r-1){e.dividerColor?Array.isArray(e.dividerColor)&&(e.dividerColor=new g(...e.dividerColor)):e.dividerColor=new g(1,1,1,1);let n=new m(e.dividerColor,2);n.constY((i+1)*2/r-1),n.arrangeX(),s.divider=n,t.addAuxLine(n)}i++}if(typeof e.overlay=="object"){let l=e.overlay,s=e.overlayCtx;s.clearRect(0,0,e.overlay.width,e.overlay.height),s.font="1em Courier",s.fillStyle="white";for(let o in e.lines){let n=e.lines[o];(n.useOverlay||!("useOverlay"in n))&&(s.fillText(o,20,l.height*(n.position+.1)/e.nLines),s.fillText(n.ymax,l.width-70,l.height*(n.position+.1)/e.nLines),s.fillText(n.ymin,l.width-70,l.height*(n.position+.9)/e.nLines))}}return t.update(),this.plots[e._id]}deinitPlot(e){return typeof e=="string"&&(e=this.plots[e]),e.plot.clear(),e.plot.removeAllLines(),!0}reinitPlot(e,t){return typeof e=="string"&&(e=this.plots[e]),e.plot.clear(),e.plot.removeAllLines(),this.initPlot(t,e.plot)}update(e,t,i=!0){if(typeof e=="string"&&(e=this.plots[e]),!e)return!1;if(t){let r=!1;for(let l in t)if(e.settings.lines[l]){let s=e.settings.lines[l],o=s.values;if(Array.isArray(t[l])?s.values=t[l]:Object.assign(s,t[l]),s.values){if(e.settings.overlay){let n=Math.max(...s.values),h=Math.min(...s.values);s.ymin=h,s.ymax=n}s.autoscale&&(s.values=u.autoscale(s.values,s.position,e.settings.nLines,s.centerZero)),s.values.length!==s.points&&(s.interpolate?s.values.length>s.points?s.values=u.downsample(s.values,s.points):s.values.length<s.points&&(s.values=u.upsample(s.values,s.points)):s.values.length>s.points?s.values=s.values.slice(s.values.length-s.points):s.values=[...o.slice(s.points-s.values.length),...s.values]),s.values.forEach((n,h)=>s.line.setY(h,n))}}}if(typeof e.settings.overlay=="object"){let r=e.settings.overlay,l=e.settings.overlayCtx;l.clearRect(0,0,e.settings.overlay.width,e.settings.overlay.height),l.font="1em Courier",l.fillStyle="white";for(let s in e.settings.lines){let o=e.settings.lines[s];(o.useOverlay||!("useOverlay"in o))&&(l.fillText(s,20,r.height*(o.position+.1)/e.settings.nLines),l.fillText(o.ymax,r.width-70,r.height*(o.position+.1)/e.settings.nLines),l.fillText(o.ymin,r.width-70,r.height*(o.position+.9)/e.settings.nLines))}}return i&&e.plot.update(),!0}updateLine(e,t,i,r,l,s,o){return e.numPoints!==t.length&&(i?e.numPoints>t.length?t=u.downsample(t,e.numPoints):e.numPoints<t.length&&(t=u.upsample(t,e.numPoints)):t.length>e.numPoints?t=t.slice(t.length-e.numPoints):t=[...new Array(e.numPoints-t.length).fill(0),...t]),r&&(t=u.autoscale(t,l,s,o)),t.forEach((n,h)=>e.setY(h,n)),!0}static autoscale(e,t=0,i=1,r=!1){if(e?.length===0)return e;let l=Math.max(...e),s=Math.min(...e),o=1/i,n;if(r){let h=Math.max(Math.abs(s),Math.abs(l));return n=o/h,e.map(c=>c*n+(o*(t+1)*2-1-o))}else return n=o/(l-s),e.map(h=>2*((h-s)*n-1/(2*i))+(o*(t+1)*2-1-o))}static absmax(e){return Math.max(Math.abs(Math.min(...e)),Math.max(...e))}static downsample(e,t,i=1){if(e.length>t){let r=new Array(t),l=e.length/t,s=e.length-1,o=0,n=0;for(let h=l;h<e.length;h+=l){let c=Math.round(h);c>s&&(c=s);for(let f=o;f<c;f++)r[n]+=e[f];r[n]/=(c-o)*i,n++,o=c}return r}else return e}static upsample(e,t,i=1){var r=function(b,v,P){return(b+(v-b)*P)*i},l=new Array(t),s=(e.length-1)/(t-1);l[0]=e[0];for(var o=1;o<t-1;o++){var n=o*s,h=Math.floor(n),c=Math.ceil(n),f=n-h;l[o]=r(e[h],e[c],f)}return l[t-1]=e[e.length-1],l}static interpolate(e,t,i=1){return e.length>t?u.downsample(e,t,i):e.length<t?u.upsample(e,t,i):e}static HSLToRGB(e,t,i){t/=100,i/=100;let r=(1-Math.abs(2*i-1))*t,l=r*(1-Math.abs(e/60%2-1)),s=i-r/2,o=0,n=0,h=0;return 0<=e&&e<60?(o=r,n=l,h=0):60<=e&&e<120?(o=l,n=r,h=0):120<=e&&e<180?(o=0,n=r,h=l):180<=e&&e<240?(o=0,n=l,h=r):240<=e&&e<300?(o=l,n=0,h=r):300<=e&&e<360&&(o=r,n=0,h=l),o=Math.round((o+s)*255),n=Math.round((n+s)*255),h=Math.round((h+s)*255),[o,n,h]}static circularBuffer(e,t){return t.length<e.length?e.splice(0,e.length-t.length,...e.slice(t.length)).splice(e.length-t.length,e.length,...t):t.length>e.length?e.splice(0,e.length,t.slice(t.length-e.length)):e.splice(0,e.length,...t),e}static formatDataForCharts(e,t){if(Array.isArray(e))if(Array.isArray(e[0])){let i={};e.forEach((r,l)=>{i[l]=r}),e=i}else t?e={[t]:e}:e={0:e};else if(typeof e=="object")for(let i in e)typeof e[i]=="number"?e[i]=[e[i]]:e[i]?.values&&typeof e[i].values=="number"&&(e[i].values=[e[i].values]);else if(typeof e=="string"){let i;e.includes("	")?i=e.split("	"):e.includes(",")&&(i=e.split(",")),e={},i.forEach((r,l)=>{if(r.includes(":")){let[s,o]=r.split(":");e[s]=[parseFloat(o)]}else e[l]=[parseFloat(r)]})}else typeof e=="number"&&(t?e={[t]:[e]}:e={0:[e]});return e}static padTime(e,t,i,r){let l=(e[0]-t)/i/r;return[...new Array(r-e.length).map((o,n)=>t+l*(n+1)),...e]}static interpolateForTime(e,t,i){return u.interpolate(e,Math.ceil(i*t))}};})();
