(()=>{var g=class{constructor(e,t,i,o){this.r=e,this.g=t,this.b=i,this.a=o}},d=class{constructor(){this.scaleX=1,this.scaleY=1,this.offsetX=0,this.offsetY=0,this.loop=!1,this._vbuffer=0,this._coord=0,this.visible=!0,this.intensity=1,this.xy=new Float32Array([]),this.numPoints=0,this.color=new g(0,0,0,1),this.webglNumPoints=0}},m=class extends d{constructor(e,t){super(),this.currentIndex=0,this.webglNumPoints=t,this.numPoints=t,this.color=e,this.xy=new Float32Array(2*this.webglNumPoints)}setX(e,t){this.xy[e*2]=t}setY(e,t){this.xy[e*2+1]=t}getX(e){return this.xy[e*2]}getY(e){return this.xy[e*2+1]}lineSpaceX(e,t){for(let i=0;i<this.numPoints;i++)this.setX(i,e+t*i)}arrangeX(){this.lineSpaceX(-1,2/this.numPoints)}constY(e){for(let t=0;t<this.numPoints;t++)this.setY(t,e)}shiftAdd(e){let t=e.length;for(let i=0;i<this.numPoints-t;i++)this.setY(i,this.getY(i+t));for(let i=0;i<t;i++)this.setY(i+this.numPoints-t,e[i])}addArrayY(e){if(this.currentIndex+e.length<=this.numPoints)for(let t=0;t<e.length;t++)this.setY(this.currentIndex,e[t]),this.currentIndex++}replaceArrayY(e){if(e.length==this.numPoints)for(let t=0;t<this.numPoints;t++)this.setY(t,e[t])}};var A=(h,e,t)=>{let i={x:0,y:0};return i.x=h.x+e.x*t,i.y=h.y+e.y*t,i},x=h=>L(-h.y,h.x),y=(h,e)=>{let t=R(h,e);return t=_(t),t},Y=(h,e)=>{let t={x:0,y:0};return t.x=h.x+e.x,t.y=h.y+e.y,t},M=(h,e)=>h.x*e.x+h.y*e.y,_=h=>{let e={x:0,y:0},t=h.x*h.x+h.y*h.y;return t>0&&(t=1/Math.sqrt(t),e.x=h.x*t,e.y=h.y*t),e},L=(h,e)=>{let t={x:0,y:0};return t.x=h,t.y=e,t},R=(h,e)=>{let t={x:0,y:0};return t.x=h.x-e.x,t.y=h.y-e.y,t},T=h=>{let e,t={x:0,y:0},i={x:0,y:0},o=[],r=(l,a)=>{o.push({vec2:l,miterLength:a})},n=l=>({x:h[l*2],y:h[l*2+1]});t=y(n(1),n(0)),e=x(t),r(e,1);let s=h.length/2;for(let l=1;l<s-1;l++){let a=n(l-1),u=n(l),f=n(l+1);t=y(u,a),e=x(t),i=y(f,u);let b=S(t,i),w=X(t,b,1);r(b,w)}return t=y(n(s-1),n(s-2)),e=x(t),r(e,1),o},S=(h,e)=>{let t=Y(h,e);return t=_(t),L(-t.y,t.x)},X=(h,e,t)=>{let i=L(-h.y,h.x);return t/M(e,i)},p=class extends d{constructor(e,t,i){super(),this.currentIndex=0,this._thicknessRequested=0,this._actualThickness=0,this.webglNumPoints=t*2,this.numPoints=t,this.color=e,this._thicknessRequested=i,this._linePoints=new Float32Array(t*2),this.xy=new Float32Array(2*this.webglNumPoints)}convertToTriPoints(){let e=this._actualThickness/2,t=T(this._linePoints);for(let i=0;i<this.numPoints;i++){let o=this._linePoints[2*i],r=this._linePoints[2*i+1],n={x:o,y:r},s=A(n,t[i].vec2,t[i].miterLength*e),l=A(n,t[i].vec2,-t[i].miterLength*e);this.xy[i*4]=s.x,this.xy[i*4+1]=s.y,this.xy[i*4+2]=l.x,this.xy[i*4+3]=l.y}}setX(e,t){this._linePoints[e*2]=t}setY(e,t){this._linePoints[e*2+1]=t}lineSpaceX(e,t){for(let i=0;i<this.numPoints;i++)this.setX(i,e+t*i)}setThickness(e){this._thicknessRequested=e}getThickness(){return this._thicknessRequested}setActualThickness(e){this._actualThickness=e}},v=class{constructor(e,t){this.debug=!1,this.addLine=this.addDataLine,t==null?this.webgl=e.getContext("webgl",{antialias:!0,transparent:!1}):(this.webgl=e.getContext("webgl",{antialias:t.antialias,transparent:t.transparent,desynchronized:t.deSync,powerPerformance:t.powerPerformance,preserveDrawing:t.preserveDrawing}),this.debug=t.debug==null?!1:t.debug),this.log("canvas type is: "+e.constructor.name),this.log(`[webgl-plot]:width=${e.width}, height=${e.height}`),this._linesData=[],this._linesAux=[],this._thickLines=[],this._surfaces=[],this.gScaleX=1,this.gScaleY=1,this.gXYratio=1,this.gOffsetX=0,this.gOffsetY=0,this.gLog10X=!1,this.gLog10Y=!1,this.webgl.clear(this.webgl.COLOR_BUFFER_BIT),this.webgl.viewport(0,0,e.width,e.height),this._progLine=this.webgl.createProgram(),this.initThinLineProgram(),this.webgl.enable(this.webgl.BLEND),this.webgl.blendFunc(this.webgl.SRC_ALPHA,this.webgl.ONE_MINUS_SRC_ALPHA)}get linesData(){return this._linesData}get linesAux(){return this._linesAux}get thickLines(){return this._thickLines}get surfaces(){return this._surfaces}_drawLines(e){let t=this.webgl;e.forEach(i=>{if(i.visible){t.useProgram(this._progLine);let o=t.getUniformLocation(this._progLine,"uscale");t.uniformMatrix2fv(o,!1,new Float32Array([i.scaleX*this.gScaleX*(this.gLog10X?1/Math.log(10):1),0,0,i.scaleY*this.gScaleY*this.gXYratio*(this.gLog10Y?1/Math.log(10):1)]));let r=t.getUniformLocation(this._progLine,"uoffset");t.uniform2fv(r,new Float32Array([i.offsetX+this.gOffsetX,i.offsetY+this.gOffsetY]));let n=t.getUniformLocation(this._progLine,"is_log");t.uniform2iv(n,new Int32Array([this.gLog10X?1:0,this.gLog10Y?1:0]));let s=t.getUniformLocation(this._progLine,"uColor");t.uniform4fv(s,[i.color.r,i.color.g,i.color.b,i.color.a]),t.bufferData(t.ARRAY_BUFFER,i.xy,t.STREAM_DRAW),t.drawArrays(i.loop?t.LINE_LOOP:t.LINE_STRIP,0,i.webglNumPoints)}})}_drawSurfaces(e){let t=this.webgl;e.forEach(i=>{if(i.visible){t.useProgram(this._progLine);let o=t.getUniformLocation(this._progLine,"uscale");t.uniformMatrix2fv(o,!1,new Float32Array([i.scaleX*this.gScaleX*(this.gLog10X?1/Math.log(10):1),0,0,i.scaleY*this.gScaleY*this.gXYratio*(this.gLog10Y?1/Math.log(10):1)]));let r=t.getUniformLocation(this._progLine,"uoffset");t.uniform2fv(r,new Float32Array([i.offsetX+this.gOffsetX,i.offsetY+this.gOffsetY]));let n=t.getUniformLocation(this._progLine,"is_log");t.uniform2iv(n,new Int32Array([this.gLog10X?1:0,this.gLog10Y?1:0]));let s=t.getUniformLocation(this._progLine,"uColor");t.uniform4fv(s,[i.color.r,i.color.g,i.color.b,i.color.a]),t.bufferData(t.ARRAY_BUFFER,i.xy,t.STREAM_DRAW),t.drawArrays(t.TRIANGLE_STRIP,0,i.webglNumPoints)}})}_drawTriangles(e){let t=this.webgl;t.bufferData(t.ARRAY_BUFFER,e.xy,t.STREAM_DRAW),t.useProgram(this._progLine);let i=t.getUniformLocation(this._progLine,"uscale");t.uniformMatrix2fv(i,!1,new Float32Array([e.scaleX*this.gScaleX*(this.gLog10X?1/Math.log(10):1),0,0,e.scaleY*this.gScaleY*this.gXYratio*(this.gLog10Y?1/Math.log(10):1)]));let o=t.getUniformLocation(this._progLine,"uoffset");t.uniform2fv(o,new Float32Array([e.offsetX+this.gOffsetX,e.offsetY+this.gOffsetY]));let r=t.getUniformLocation(this._progLine,"is_log");t.uniform2iv(r,new Int32Array([0,0]));let n=t.getUniformLocation(this._progLine,"uColor");t.uniform4fv(n,[e.color.r,e.color.g,e.color.b,e.color.a]),t.drawArrays(t.TRIANGLE_STRIP,0,e.xy.length/2)}_drawThickLines(){this._thickLines.forEach(e=>{if(e.visible){let t=Math.min(this.gScaleX,this.gScaleY);e.setActualThickness(e.getThickness()/t),e.convertToTriPoints(),this._drawTriangles(e)}})}update(){this.clear(),this.draw()}draw(){this._drawLines(this.linesData),this._drawLines(this.linesAux),this._drawThickLines(),this._drawSurfaces(this.surfaces)}clear(){this.webgl.clear(this.webgl.COLOR_BUFFER_BIT)}_addLine(e){e._vbuffer=this.webgl.createBuffer(),this.webgl.bindBuffer(this.webgl.ARRAY_BUFFER,e._vbuffer),this.webgl.bufferData(this.webgl.ARRAY_BUFFER,e.xy,this.webgl.STREAM_DRAW),e._coord=this.webgl.getAttribLocation(this._progLine,"coordinates"),this.webgl.vertexAttribPointer(e._coord,2,this.webgl.FLOAT,!1,0,0),this.webgl.enableVertexAttribArray(e._coord)}addDataLine(e){this._addLine(e),this.linesData.push(e)}addAuxLine(e){this._addLine(e),this.linesAux.push(e)}addThickLine(e){this._addLine(e),this._thickLines.push(e)}addSurface(e){this._addLine(e),this.surfaces.push(e)}initThinLineProgram(){let e=`
      attribute vec2 coordinates;
      uniform mat2 uscale;
      uniform vec2 uoffset;
      uniform ivec2 is_log;

      void main(void) {
         float x = (is_log[0]==1) ? log(coordinates.x) : coordinates.x;
         float y = (is_log[1]==1) ? log(coordinates.y) : coordinates.y;
         vec2 line = vec2(x, y);
         gl_Position = vec4(uscale*line + uoffset, 0.0, 1.0);
      }`,t=this.webgl.createShader(this.webgl.VERTEX_SHADER);this.webgl.shaderSource(t,e),this.webgl.compileShader(t);let i=`
         precision mediump float;
         uniform highp vec4 uColor;
         void main(void) {
            gl_FragColor =  uColor;
         }`,o=this.webgl.createShader(this.webgl.FRAGMENT_SHADER);this.webgl.shaderSource(o,i),this.webgl.compileShader(o),this._progLine=this.webgl.createProgram(),this.webgl.attachShader(this._progLine,t),this.webgl.attachShader(this._progLine,o),this.webgl.linkProgram(this._progLine)}popDataLine(){this.linesData.pop()}removeAllLines(){this._linesData=[],this._linesAux=[],this._thickLines=[],this._surfaces=[]}removeDataLines(){this._linesData=[]}removeAuxLines(){this._linesAux=[]}viewport(e,t,i,o){this.webgl.viewport(e,t,i,o)}log(e){this.debug&&console.log("[webgl-plot]:"+e)}};var c=class{constructor(){this.plots={}}initPlot(e,t){t||(t=new v(e.canvas,e.webglOptions)),e._id||(e._id=`plot${Math.floor(Math.random()*1e15)}`);let i={plot:t,settings:e};this.plots[e._id]=i,e.overlay&&(typeof e.overlay!="object"&&(e.overlay=document.createElement("canvas"),e.overlay.style.position="absolute",e.overlay.width=e.canvas.width,e.overlay.height=e.canvas.height,e.canvas.appendChild(e.overlay)),e.overlayCtx=e.overlay.getContext("2d")),e.width&&(e.canvas.width=e.width,e.canvas.style&&(e.canvas.style.width=e.width+"px"),typeof e.overlay=="object"&&(e.overlay.width=e.width,e.overlay.style&&(e.overlay.style.width=e.width+"px"))),e.height&&(e.canvas.height=e.height,e.canvas.style&&(e.canvas.style.height=e.height+"px"),typeof e.overlay=="object"&&(e.overlay.height=e.height,e.overlay.style&&(e.overlay.style.height=e.height+"px")));let o=0,r=Object.keys(e.lines).length;e.nLines=r;for(let n in e.lines){let s=e.lines[n];if(Array.isArray(s)&&(s={values:s},e.lines[n]=s),s.color)Array.isArray(s.color)&&(s.color=new g(...s.color));else{let a=c.HSLToRGB(360*(o/r)%360,100,50);s.color=new g(...a,1)}let l;if(s.nPoints?l=s.nPoints:s.nSec&&s.sps?l=Math.ceil(s.nSec*s.sps):s.values&&(l=s.values.length),!l)return;if(s.points=l,s.width?s.line=new p(s.color,l,s.width):s.line=new m(s.color,l),s.line.arrangeX(),s.values){if(e.overlay){let a=Math.max(...s.values),u=Math.min(...s.values);s.ymin=u,s.ymax=a}s.values.length!==l&&(s.interpolate?s.values.length>l?s.values=c.downsample(s.values,l):s.values.length<l&&(s.values=c.upsample(s.values,l)):s.values.length>s.points?s.values=s.values.slice(s.values.length-s.points):s.values=[...new Array(s.points-s.values.length).fill(0),...s.values])}else s.values=new Array(l).fill(0);if("autoscale"in s||(s.autoscale=!0),s.position||(s.position=o),s.autoscale&&(s.values=c.autoscale(s.values,s.position?s.position:o,r,s.centerZero)),s.values.forEach((a,u)=>s.line.setY(u,a)),t.addDataLine(s.line),"xAxis"in s||(s.xAxis=!0),s.xAxis){s.xColor?Array.isArray(s.xColor)&&(s.xColor=new g(...s.xColor)):s.xColor=new g(1,1,1,.3);let a=new m(s.xColor,2),u=(o+1)*2/r-1-1/r;s.autoscale?a.constY(u):a.constY(.5),a.arrangeX(),a.xy[2]=1,s.x=a,t.addAuxLine(a)}if(r>1&&s.autoscale&&o!==r-1){e.dividerColor?Array.isArray(e.dividerColor)&&(e.dividerColor=new g(...e.dividerColor)):e.dividerColor=new g(1,1,1,1);let a=new m(e.dividerColor,2);a.constY((o+1)*2/r-1),a.arrangeX(),a.xy[2]=1,s.divider=a,t.addAuxLine(a)}o++}if(typeof e.overlay=="object"){let n=e.overlay,s=e.overlayCtx;s.clearRect(0,0,e.overlay.width,e.overlay.height),s.font="1em Courier",s.fillStyle="white";for(let l in e.lines){let a=e.lines[l];(a.useOverlay||!("useOverlay"in a))&&(s.fillText(l,20,n.height*(a.position+.1)/e.nLines),s.fillText(a.ymax,n.width-70,n.height*(a.position+.1)/e.nLines),s.fillText(a.ymin,n.width-70,n.height*(a.position+.9)/e.nLines))}}return t.update(),this.plots[e._id]}deinitPlot(e){return typeof e=="string"&&(e=this.plots[e]),e.plot.clear(),e.plot.removeAllLines(),!0}reinitPlot(e,t){if(typeof e=="string"&&(e=this.plots[e]),!!e.plot)return e.plot.clear(),e.plot.removeAllLines(),Object.assign(e.settings,t),this.initPlot(e.settings,e.plot)}update(e,t,i=!0){if(typeof e=="string"&&(e=this.plots[e]),!e)return!1;if(t){let o=!1;for(let r in t)if(e.settings.lines[r]){let n=e.settings.lines[r],s=n.values;if(Array.isArray(t[r])?n.values=t[r]:Object.assign(n,t[r]),n.values){if(e.settings.overlay){let l=Math.max(...n.values),a=Math.min(...n.values);n.ymin=a,n.ymax=l}n.autoscale&&(n.values=c.autoscale(n.values,n.position,e.settings.nLines,n.centerZero)),n.values.length!==n.points&&(n.interpolate?n.values.length>n.points?n.values=c.downsample(n.values,n.points):n.values.length<n.points&&(n.values=c.upsample(n.values,n.points)):n.values.length>n.points?n.values=n.values.slice(n.values.length-n.points):n.values=[...s.slice(n.values.length),...n.values]),n.values.forEach((l,a)=>n.line.setY(a,l))}}else e.settings.generateNewLines&&(Array.isArray(t[r])&&(t[r]={values:t[r]}),!t[r].nSec&&!t[r].nPoints&&(t[r].nPoints=1e3),e.settings.lines[r]=t[r],o=!0);if(o){if(e.settings.cleanGeneration){let r=Object.assign({},e.settings.lines);for(let n in e.settings.lines)t[n]||delete r[n];e.settings.lines=r}return this.reinitPlot(e,e.settings),!0}}if(typeof e.settings.overlay=="object"){let o=e.settings.overlay,r=e.settings.overlayCtx;r.clearRect(0,0,e.settings.overlay.width,e.settings.overlay.height),r.font="1em Courier",r.fillStyle="white";for(let n in e.settings.lines){let s=e.settings.lines[n];(s.useOverlay||!("useOverlay"in s))&&(r.fillText(n,20,o.height*(s.position+.1)/e.settings.nLines),r.fillText(s.ymax,o.width-70,o.height*(s.position+.1)/e.settings.nLines),r.fillText(s.ymin,o.width-70,o.height*(s.position+.9)/e.settings.nLines))}}return i&&e.plot.update(),!0}updateLine(e,t,i,o,r,n,s){return e.numPoints!==t.length&&(i?e.numPoints>t.length?t=c.downsample(t,e.numPoints):e.numPoints<t.length&&(t=c.upsample(t,e.numPoints)):t.length>e.numPoints?t=t.slice(t.length-e.numPoints):t=[...new Array(t.length).fill(0),...t]),o&&(t=c.autoscale(t,r,n,s)),t.forEach((l,a)=>e.setY(a,l)),!0}static autoscale(e,t=0,i=1,o=!1){if(e?.length===0)return e;let r=Math.max(...e),n=Math.min(...e),s=1/i,l=1;if(o){let a=Math.max(Math.abs(n),Math.abs(r));return a!==0&&(l=s/a),e.map(u=>u*l+(s*(t+1)*2-1-s))}else return r===n?r!==0&&(l=s/r):l=s/(r-n),e.map(a=>2*((a-n)*l-1/(2*i))+(s*(t+1)*2-1-s))}static absmax(e){return Math.max(Math.abs(Math.min(...e)),Math.max(...e))}static downsample(e,t,i=1){if(e.length>t){let o=new Array(t),r=e.length/t,n=e.length-1,s=0,l=0;for(let a=r;a<e.length;a+=r){let u=Math.round(a);u>n&&(u=n);for(let f=s;f<u;f++)o[l]+=e[f];o[l]/=(u-s)*i,l++,s=u}return o}else return e}static upsample(e,t,i=1){var o=function(b,w,P){return(b+(w-b)*P)*i},r=new Array(t),n=(e.length-1)/(t-1);r[0]=e[0];for(var s=1;s<t-1;s++){var l=s*n,a=Math.floor(l),u=Math.ceil(l),f=l-a;r[s]=o(e[a],e[u],f)}return r[t-1]=e[e.length-1],r}static interpolate(e,t,i=1){return e.length>t?c.downsample(e,t,i):e.length<t?c.upsample(e,t,i):e}static HSLToRGB(e,t,i){t/=100,i/=100;let o=(1-Math.abs(2*i-1))*t,r=o*(1-Math.abs(e/60%2-1)),n=i-o/2,s=0,l=0,a=0;return 0<=e&&e<60?(s=o,l=r,a=0):60<=e&&e<120?(s=r,l=o,a=0):120<=e&&e<180?(s=0,l=o,a=r):180<=e&&e<240?(s=0,l=r,a=o):240<=e&&e<300?(s=r,l=0,a=o):300<=e&&e<360&&(s=o,l=0,a=r),s=Math.round((s+n)*255),l=Math.round((l+n)*255),a=Math.round((a+n)*255),[s,l,a]}static circularBuffer(e,t){return t.length<e.length?e.splice(0,e.length-t.length,...e.slice(t.length)).splice(t.length,e.length,...t):t.length>e.length?e.splice(0,e.length,t.slice(t.length-e.length)):e.splice(0,e.length,...t),e}static formatDataForCharts(e,t){if(Array.isArray(e))if(Array.isArray(e[0])){let i={};e.forEach((o,r)=>{i[r]=o}),e=i}else t?e={[t]:e}:e={0:e};else if(typeof e=="object")for(let i in e)typeof e[i]=="number"?e[i]=[e[i]]:e[i]?.values&&typeof e[i].values=="number"&&(e[i].values=[e[i].values]);else if(typeof e=="string"){let i;e.includes("	")?i=e.split("	"):e.includes(",")&&(i=e.split(",")),e={},i.forEach((o,r)=>{if(o.includes(":")){let[n,s]=o.split(":");e[n]=[parseFloat(s)]}else e[r]=[parseFloat(o)]})}else typeof e=="number"&&(t?e={[t]:[e]}:e={0:[e]});return e}static padTime(e,t,i,o){let r=(e[0]-t)/i/o;return[...new Array(o-e.length).map((s,l)=>t+r*(l+1)),...e]}static interpolateForTime(e,t,i){return c.interpolate(e,Math.ceil(i*t))}};})();
